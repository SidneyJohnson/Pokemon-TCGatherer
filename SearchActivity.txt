package edu.uab.sidney.pokemon_tcgatherer;
import android.content.Context;
import android.content.Intent;
import android.os.AsyncTask;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;

public class SearchActivity extends AppCompatActivity {
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_search);
        final TextView carddata = (TextView) findViewById(R.id.cardData);
        final EditText srchdata = (EditText) findViewById(R.id.searchdata);
        Button searchbutton = (Button) findViewById(R.id.searchbutton);
        Context context = getApplicationContext();
        CharSequence text = "This app is not officially supported by the Pokemon Company";
        int duration = Toast.LENGTH_SHORT;
        Toast toast = Toast.makeText(context, text, duration);
        toast.show();
        configureNextButton();
        searchbutton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                new JSONTask().execute("https://api.pokemontcg.io/v1/cards?name=" + srchdata.getText());
            }
            class JSONTask extends AsyncTask<String, String, String> {

                @Override
                protected String doInBackground(String... params) {
                    HttpURLConnection urlConnection = null;
                    BufferedReader reader = null;
                    try {
                        URL url = new URL(params[0]);
                        urlConnection = (HttpURLConnection) url.openConnection();
                        urlConnection.connect();

                        InputStream stream = urlConnection.getInputStream();

                        reader = new BufferedReader(new InputStreamReader(stream));

                        StringBuffer buffer = new StringBuffer();

                        String line = "";
                        while ((line = reader.readLine()) != null) {
                            buffer.append(line);
                        }

                        String finalJson = buffer.toString();

                        JSONObject parentObject = new JSONObject(finalJson);
                        JSONArray parentArray = parentObject.getJSONArray("cards");
                        StringBuffer finalBufferedData = new StringBuffer();
                        for(int i=0; i<parentArray.length(); i++) {
                            JSONObject finalObject = parentArray.getJSONObject(i);
                            String id = finalObject.getString("id");
                            String name = finalObject.getString("name");
                            String imageurl = finalObject.getString("imageUrl");
                            finalBufferedData.append(id + ", " + name + ", " + imageurl + "\n");
                        }


                        return finalBufferedData.toString();
                    } catch (MalformedURLException e) {
                        e.printStackTrace();
                    } catch (IOException e) {
                        e.printStackTrace();
                    }
                    catch (JSONException e) {
                        e.printStackTrace();
                    }
                    finally {
                        if (urlConnection != null) {
                            urlConnection.disconnect();
                        }
                        try {
                            if (reader != null) {
                                reader.close();
                            }
                        } catch (IOException e) {
                            e.printStackTrace();
                        }
                    }
                    return null;
                }
                protected void onPostExecute(String result) {
                    super.onPostExecute(result);
                    carddata.setText(result);
                }
            }
        });
    }
    private void configureNextButton() {
        Button faq_button = (Button) findViewById(R.id.faqbutton);
        faq_button.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                startActivity(new Intent(SearchActivity.this, FAQActivity.class));
            }
        });
    }
}